[{"code":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main() {\r\n    char str[1000];\r\n    int i = 0, words = 0;\r\n    int inWord = 0; // Flag to indicate if we're inside a word\r\n\r\n\r\n    fgets(str, sizeof(str), stdin);\r\n\r\n    // Iterate through each character in the string\r\n    while (str[i] != '\\0') {\r\n        // Check if the current character is a space, newline, or tab\r\n        if (str[i] == ' ' || str[i] == '\\n' || str[i] == '\\t') {\r\n            inWord = 0; // We've exited a word\r\n        } else if (inWord == 0) {\r\n            inWord = 1; // We've entered a new word\r\n            words++;\r\n        }\r\n        i++;\r\n    }\r\n\r\n    printf(\"Total number of words: %d\\n\", words);\r\n\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-14T10:50:57.528Z","isCorrect":false},{"code":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main() {\r\n    char str[1000];\r\n    int i = 0, words = 0;\r\n    int inWord = 0; // Flag to indicate if we're inside a word\r\n\r\n\r\n    fgets(str, sizeof(str), stdin);\r\n\r\n    // Iterate through each character in the string\r\n    while (str[i] != '\\0') {\r\n        // Check if the current character is a space, newline, or tab\r\n        if (str[i] == ' ' || str[i] == '\\n' || str[i] == '\\t') {\r\n            inWord = 0; // We've exited a word\r\n        } else if (inWord == 0) {\r\n            inWord = 1; // We've entered a new word\r\n            words++;\r\n        }\r\n        i++;\r\n    }\r\n\r\n    printf(\"%u\", words);\r\n\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-14T10:51:39.807Z","isCorrect":true},{"code":"#include <stdio.h>  // Required for input/output functions (printf, fgets)\r\n#include <string.h> // Required for string manipulation functions (strlen, strcspn)\r\n#include <ctype.h>  // Required for character handling functions (isspace)\r\n\r\nint main() {\r\n    char str[200]; // Declare a character array (string) to store the input.\r\n                   // 200 is chosen as a reasonable maximum length for the string.\r\n    int word_count = 0; // Variable to store the count of words\r\n    int in_word = 0;    // Flag to indicate if currently inside a word (1) or not (0)\r\n    int i;              // Loop counter\r\n\r\n    scanf(\"%[^\\n]s\",str);\r\n\r\n   \r\n    for (i = 0; str[i] != '\\0'; i++) {\r\n        \r\n        if (isspace(str[i])) {\r\n            in_word = 0;\r\n        }\r\n        \r\n        else if (in_word == 0) {\r\n            word_count++; // Increment word count\r\n            in_word = 1;  // Set flag to indicate we are now inside a word\r\n        }\r\n    }\r\n\r\n    \r\n    printf(\"%d\\n\", word_count);\r\n\r\n    return 0; // Indicate successful execution\r\n}","language":"c","time":"2025-05-28T18:05:03.726Z","isCorrect":true}]