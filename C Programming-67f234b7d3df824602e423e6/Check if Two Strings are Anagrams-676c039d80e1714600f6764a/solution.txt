[{"code":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint areAnagrams(char *str1, char *str2) {\r\n    // If lengths are not equal, they cannot be anagrams\r\n    if (strlen(str1) != strlen(str2)) {\r\n        return 0;\r\n    }\r\n\r\n    int count[256] = {0}; // Array to store frequency of characters\r\n\r\n    // Increment count for characters in str1\r\n    for (int i = 0; str1[i] != '\\0'; i++) {\r\n        count[(unsigned char)str1[i]]++;\r\n    }\r\n\r\n    // Decrement count for characters in str2\r\n    for (int i = 0; str2[i] != '\\0'; i++) {\r\n        count[(unsigned char)str2[i]]--;\r\n    }\r\n\r\n    // If all counts are zero, strings are anagrams\r\n    for (int i = 0; i < 256; i++) {\r\n        if (count[i] != 0) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nint main() {\r\n    char str1[1000], str2[1000];\r\n\r\n  \r\n    fgets(str1, sizeof(str1), stdin);\r\n    str1[strcspn(str1, \"\\n\")] = '\\0'; // Remove newline character\r\n\r\n    \r\n    fgets(str2, sizeof(str2), stdin);\r\n    str2[strcspn(str2, \"\\n\")] = '\\0'; // Remove newline character\r\n\r\n    if (areAnagrams(str1, str2)) {\r\n        printf(\"Yes\");\r\n    } else {\r\n        printf(\"No\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-14T11:13:15.798Z","isCorrect":true},{"code":"#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h> // Required for malloc and free, though not strictly needed for this specific approach if using fixed arrays\r\n\r\n// Function to remove newline character from a string\r\n\r\n\r\nint main() {\r\n    char str1[101]; // Assuming max length 100 + null terminator\r\n    char str2[101]; // Assuming max length 100 + null terminator\r\n\r\n    scanf(\"%[^\\n]s\",str1);\r\n    scanf(\"%[^\\n]s\",str2);\r\n    \r\n    // If lengths are different, they cannot be anagrams\r\n    if (strlen(str1) != strlen(str2)) {\r\n        printf(\"No\\n\");\r\n        return 0;\r\n    }\r\n\r\n    // Using an array to store character counts (assuming ASCII characters)\r\n    int count1[256] = {0}; // Initialize all counts to 0\r\n    int count2[256] = {0};\r\n\r\n    // Count characters in the first string\r\n    for (int i = 0; str1[i] != '\\0'; i++) {\r\n        count1[str1[i]]++;\r\n    }\r\n\r\n    // Count characters in the second string\r\n    for (int i = 0; str2[i] != '\\0'; i++) {\r\n        count2[str2[i]]++;\r\n    }\r\n\r\n    // Compare character counts\r\n    for (int i = 0; i < 256; i++) {\r\n        if (count1[i] != count2[i]) {\r\n            printf(\"No\\n\");\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    // If all counts match, they are anagrams\r\n    printf(\"Yes\\n\");\r\n\r\n    return 0;\r\n}","language":"c","time":"2025-05-28T18:44:19.336Z","isCorrect":false}]