[{"code":"#include <stdio.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\n\r\n// Function to check if a string is a palindrome\r\nint is_palindrome(const char *str) {\r\n    int left = 0;\r\n    int right = strlen(str) - 1;\r\n\r\n    while (left < right) {\r\n        // Skip non-alphanumeric characters from the left\r\n        while (left < right && !isalnum(str[left])) {\r\n            left++;\r\n        }\r\n        // Skip non-alphanumeric characters from the right\r\n        while (left < right && !isalnum(str[right])) {\r\n            right--;\r\n        }\r\n\r\n        // Compare characters case-insensitively\r\n        if (tolower(str[left]) != tolower(str[right])) {\r\n            return 0; // Not a palindrome\r\n        }\r\n\r\n        left++;\r\n        right--;\r\n    }\r\n\r\n    return 1; // Is a palindrome\r\n}\r\n\r\nint main() {\r\n    char input[1000];\r\n\r\n    \r\n    fgets(input, sizeof(input), stdin);\r\n\r\n    // Remove newline character if present\r\n    size_t len = strlen(input);\r\n    if (len > 0 && input[len - 1] == '\\n') {\r\n        input[len - 1] = '\\0';\r\n    }\r\n\r\n    if (is_palindrome(input)) {\r\n        printf(\"Yes\");\r\n    } else {\r\n        printf(\"No\");\r\n    }\r\n\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-15T08:27:52.423Z","isCorrect":true}]