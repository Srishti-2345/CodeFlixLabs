[{"code":"#include <stdio.h>\r\n\r\nint main() {\r\n    char str1[1000], str2[1000];\r\n    int i = 0, j = 0;\r\n\r\n   \r\n    fgets(str1, sizeof(str1), stdin);\r\n\r\n    \r\n    fgets(str2, sizeof(str2), stdin);\r\n\r\n    // Remove newline character if present\r\n    while (str1[i] != '\\0') {\r\n        i++;\r\n    }\r\n    if (str1[i - 1] == '\\n') {\r\n        str1[i - 1] = '\\0';\r\n        i--;\r\n    }\r\n\r\n    // Append str2 to str1\r\n    while (str2[j] != '\\0') {\r\n        str1[i] = str2[j];\r\n        i++;\r\n        j++;\r\n    }\r\n\r\n    // Null-terminate the concatenated string\r\n    str1[i] = '\\0';\r\n\r\n    printf(\"%s\", str1);\r\n\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-14T11:00:29.877Z","isCorrect":true},{"code":"#include <stdio.h>  // Required for input/output functions (printf, fgets)\r\n#include <string.h> // Required for string manipulation functions (strlen, strcspn)\r\n\r\nint main() {\r\n    char str1[100]; // Declare a character array (string) to store the first input string.\r\n    char str2[100]; // Declare a character array (string) to store the second input string.\r\n    char concatenated_str[200]; // Declare a character array to store the result of concatenation.\r\n                                // Size should be sum of max lengths of str1 and str2 + 1 for null terminator.\r\n    int i, j; // Loop counters\r\n\r\n    scanf(\"%[^\\n]s\",str1);\r\n    scanf(\"%[^\\n]s\",str2);\r\n\r\n    \r\n    for (i = 0; str1[i] != '\\0'; i++) {\r\n        concatenated_str[i] = str1[i];\r\n    }\r\n\r\n    // Then, copy characters from str2 to concatenated_str, starting from where str1 ended\r\n    for (j = 0; str2[j] != '\\0'; j++) {\r\n        concatenated_str[i + j] = str2[j];\r\n    }\r\n\r\n    // Add the null terminator at the end of the concatenated string\r\n    concatenated_str[i + j] = '\\0';\r\n\r\n    \r\n    printf(\"%s\\n\", concatenated_str);\r\n\r\n    return 0; // Indicate successful execution\r\n}\r\n","language":"c","time":"2025-05-28T18:27:36.928Z","isCorrect":false},{"code":"#include <stdio.h>  // Required for input/output functions (printf, fgets)\r\n#include <string.h> // Required for string manipulation functions (strlen, strcspn)\r\n\r\nint main() {\r\n    char str1[100]; // Declare a character array (string) to store the first input string.\r\n    char str2[100]; // Declare a character array (string) to store the second input string.\r\n    char concatenated_str[200]; // Declare a character array to store the result of concatenation.\r\n    // Size should be sum of max lengths of str1 and str2 + 1 for null terminator.\r\n    int i, j; // Loop counters\r\n\r\n    scanf(\"%[^\\n]s\",str1);\r\n    scanf(\"%[^\\n]s\",str2);\r\n\r\n    \r\n    for (i = 0; str1[i] != '\\0'; i++) {\r\n        concatenated_str[i] = str1[i];\r\n    }\r\n\r\n    // Then, copy characters from str2 to concatenated_str, starting from where str1 ended\r\n    for (j = 0; str2[j] != '\\0'; j++) {\r\n        concatenated_str[i + j] = str2[j];\r\n    }\r\n\r\n    // Add the null terminator at the end of the concatenated string\r\n    concatenated_str[i + j] = '\\0';\r\n\r\n    \r\n    printf(\"%s\", concatenated_str);\r\n\r\n    return 0; // Indicate successful execution\r\n}\r\n","language":"c","time":"2025-05-28T18:29:11.497Z","isCorrect":false},{"code":"#include <stdio.h>  // Required for input/output functions (printf, fgets)\r\n#include <string.h> // Required for string manipulation functions (strlen, strcspn)\r\n\r\nint main() {\r\n    char str1[100]; // Declare a character array (string) to store the first input string.\r\n    char str2[100]; // Declare a character array (string) to store the second input string.\r\n    char concatenated_str[200]; // Declare a character array to store the result of concatenation.\r\n    // Size should be sum of max lengths of str1 and str2 + 1 for null terminator.\r\n    int i, j; // Loop counters\r\n\r\n    scanf(\"%[^\\n]s\",str1);\r\n     getchar();\r\n    scanf(\"%[^\\n]s\",str2);\r\n\r\n    \r\n    for (i = 0; str1[i] != '\\0'; i++) {\r\n        concatenated_str[i] = str1[i];\r\n    }\r\n\r\n    // Then, copy characters from str2 to concatenated_str, starting from where str1 ended\r\n    for (j = 0; str2[j] != '\\0'; j++) {\r\n        concatenated_str[i + j] = str2[j];\r\n    }\r\n\r\n    // Add the null terminator at the end of the concatenated string\r\n    concatenated_str[i + j] = '\\0';\r\n\r\n    \r\n    printf(\"%s\", concatenated_str);\r\n\r\n    return 0; // Indicate successful execution\r\n}\r\n","language":"c","time":"2025-05-28T18:30:15.495Z","isCorrect":true}]