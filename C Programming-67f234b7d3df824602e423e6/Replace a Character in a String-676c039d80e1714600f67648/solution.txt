[{"code":"#include <stdio.h>\r\n\r\nint main() {\r\n    char str[1000], oldChar, newChar;\r\n    int i;\r\n\r\n    \r\n    fgets(str, sizeof(str), stdin);\r\n\r\n    \r\n    scanf(\"%c\", &oldChar);\r\n    getchar(); // To consume the newline character left by scanf\r\n\r\n   \r\n    scanf(\"%c\", &newChar);\r\n\r\n    // Loop through the string and replace occurrences of oldChar with newChar\r\n    for (i = 0; str[i] != '\\0'; i++) {\r\n        if (str[i] == oldChar) {\r\n            str[i] = newChar;\r\n        }\r\n    }\r\n\r\n    printf(\"%s\", str);\r\n\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-14T11:07:09.076Z","isCorrect":true},{"code":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main() {\r\n    char str[100]; // Assuming a maximum string length of 99 characters + null terminator\r\n    char char_to_replace;\r\n    char replacement_char;\r\n\r\n    // Read the string\r\n   scanf(\"%[^\\n]s\",str);\r\n    // Read the character to be replaced\r\n    scanf(\" %c\", &char_to_replace); // Space before %c to consume any leftover newline\r\n\r\n    // Read the replacement character\r\n    scanf(\" %c\", &replacement_char); // Space before %c to consume any leftover newline\r\n\r\n    // Iterate through the string and replace characters\r\n    for (int i = 0; i < strlen(str); i++) {\r\n        if (str[i] == char_to_replace) {\r\n            str[i] = replacement_char;\r\n        }\r\n    }\r\n\r\n    // Output the modified string\r\n    printf(\"%s\\n\", str);\r\n\r\n    return 0;\r\n}","language":"c","time":"2025-05-28T18:39:53.008Z","isCorrect":true}]