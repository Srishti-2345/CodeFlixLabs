[{"code":"#include <stdio.h>\r\n\r\nint main() {\r\n    char str[1000];\r\n    int i = 0;\r\n\r\n    \r\n    fgets(str, sizeof(str), stdin);\r\n\r\n    // Count characters until the null terminator is encountered\r\n    while (str[i] != '\\0') {\r\n        i++;\r\n    }\r\n\r\n    // Adjust for the newline character added by fgets\r\n    if (str[i - 1] == '\\n') {\r\n        i--;\r\n    }\r\n\r\n    printf(\"%d\", i);\r\n\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-14T10:57:04.300Z","isCorrect":true},{"code":"#include <stdio.h>  // Required for input/output functions (printf, fgets)\r\n#include <string.h> // Required for strcspn (to remove newline from fgets)\r\n\r\nint main() {\r\n    char str[100]; // Declare a character array (string) to store the input.\r\n                   // 100 is chosen as a reasonable maximum length for the string.\r\n    int length = 0; // Variable to store the calculated length of the string\r\n    int i = 0;      // Loop counter to iterate through the string\r\n\r\n    scanf(\"%[^\\n]s\",str);\r\n\r\n    \r\n \r\n\r\n    \r\n    while (str[i] != '\\0') {\r\n        length++; // Increment length for each character encountered\r\n        i++;      // Move to the next character\r\n    }\r\n\r\n   \r\n    printf(\"%d\\n\", length);\r\n\r\n    return 0; // Indicate successful execution\r\n}","language":"c","time":"2025-05-28T18:22:43.772Z","isCorrect":true}]